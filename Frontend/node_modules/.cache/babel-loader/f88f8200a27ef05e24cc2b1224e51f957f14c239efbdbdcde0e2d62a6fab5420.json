{"ast":null,"code":"var _jsxFileName = \"/Users/surajkumar/Desktop/Zero-hack/ZeroOne-AccessMatrix/src/pages/RoleManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './RoleManagement.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoleManagement = () => {\n  _s();\n  // Initial roles data with description, users, and permissions\n  const [roles, setRoles] = useState([{\n    role: \"Admin\",\n    description: \"Full system access\",\n    permissions: [\"Read\", \"Write\", \"Execute\"],\n    members: []\n  }, {\n    role: \"Security Analyst\",\n    description: \"Monitor and analyze security events\",\n    permissions: [\"Read\", \"Write\"],\n    members: []\n  }, {\n    role: \"Incident Responder\",\n    description: \"Respond to security incidents\",\n    permissions: [\"Read\"],\n    members: []\n  }]);\n\n  // States for managing modals and member inputs\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [newMember, setNewMember] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [editingMemberId, setEditingMemberId] = useState(null);\n  const [viewMembers, setViewMembers] = useState(null); // Track which role's members are being viewed\n\n  // Handle member input changes\n  const handleMemberInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewMember(prevMember => ({\n      ...prevMember,\n      [name]: value\n    }));\n  };\n\n  // Function to handle adding a new member\n  const addMember = () => {\n    if (newMember.username.trim() && newMember.password.trim() && selectedRole !== null) {\n      const updatedRoles = [...roles];\n      updatedRoles[selectedRole].members.push({\n        ...newMember\n      });\n      setRoles(updatedRoles);\n      setNewMember({\n        username: \"\",\n        password: \"\"\n      }); // Clear inputs\n    }\n  };\n\n  // Function to handle editing a member\n  const saveEditMember = () => {\n    const updatedRoles = [...roles];\n    updatedRoles[selectedRole].members[editingMemberId] = {\n      ...newMember\n    };\n    setRoles(updatedRoles);\n    setEditingMemberId(null); // Stop editing\n    setNewMember({\n      username: \"\",\n      password: \"\"\n    }); // Clear inputs\n  };\n\n  // Function to handle deleting a member\n  const deleteMember = memberIndex => {\n    const updatedRoles = [...roles];\n    updatedRoles[selectedRole].members.splice(memberIndex, 1);\n    setRoles(updatedRoles);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Role Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-member-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedRole(e.target.value),\n        value: selectedRole || \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), roles.map((role, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: role.role\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), selectedRole !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: newMember.username,\n          onChange: handleMemberInputChange,\n          placeholder: \"Enter username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: newMember.password,\n          onChange: handleMemberInputChange,\n          placeholder: \"Enter password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), editingMemberId !== null ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveEditMember,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addMember,\n          children: \"+ Add Member\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), roles.map((role, roleIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"role-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: role.role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: role.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Members: \", role.members.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setViewMembers(viewMembers === roleIndex ? null : roleIndex),\n        children: viewMembers === roleIndex ? \"Hide Members\" : \"View Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), viewMembers === roleIndex && /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: role.members.map((member, memberIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: member.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSelectedRole(roleIndex);\n                  setEditingMemberId(memberIndex);\n                  setNewMember(member);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteMember(memberIndex),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this)]\n          }, memberIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)]\n    }, roleIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleManagement, \"7VOXscgSBuGz4EAKDBpffrf6FHQ=\");\n_c = RoleManagement;\nexport default RoleManagement;\nvar _c;\n$RefreshReg$(_c, \"RoleManagement\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","RoleManagement","_s","roles","setRoles","role","description","permissions","members","selectedRole","setSelectedRole","newMember","setNewMember","username","password","editingMemberId","setEditingMemberId","viewMembers","setViewMembers","handleMemberInputChange","e","name","value","target","prevMember","addMember","trim","updatedRoles","push","saveEditMember","deleteMember","memberIndex","splice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","map","index","type","placeholder","onClick","roleIndex","length","member","_c","$RefreshReg$"],"sources":["/Users/surajkumar/Desktop/Zero-hack/ZeroOne-AccessMatrix/src/pages/RoleManagement.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './RoleManagement.css';\n\nconst RoleManagement = () => {\n  // Initial roles data with description, users, and permissions\n  const [roles, setRoles] = useState([\n    {\n      role: \"Admin\",\n      description: \"Full system access\",\n      permissions: [\"Read\", \"Write\", \"Execute\"],\n      members: [],\n    },\n    {\n      role: \"Security Analyst\",\n      description: \"Monitor and analyze security events\",\n      permissions: [\"Read\", \"Write\"],\n      members: [],\n    },\n    {\n      role: \"Incident Responder\",\n      description: \"Respond to security incidents\",\n      permissions: [\"Read\"],\n      members: [],\n    },\n  ]);\n\n  // States for managing modals and member inputs\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [newMember, setNewMember] = useState({ username: \"\", password: \"\" });\n  const [editingMemberId, setEditingMemberId] = useState(null);\n  const [viewMembers, setViewMembers] = useState(null); // Track which role's members are being viewed\n\n  // Handle member input changes\n  const handleMemberInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewMember((prevMember) => ({\n      ...prevMember,\n      [name]: value,\n    }));\n  };\n\n  // Function to handle adding a new member\n  const addMember = () => {\n    if (\n      newMember.username.trim() &&\n      newMember.password.trim() &&\n      selectedRole !== null\n    ) {\n      const updatedRoles = [...roles];\n      updatedRoles[selectedRole].members.push({ ...newMember });\n      setRoles(updatedRoles);\n      setNewMember({ username: \"\", password: \"\" }); // Clear inputs\n    }\n  };\n\n  // Function to handle editing a member\n  const saveEditMember = () => {\n    const updatedRoles = [...roles];\n    updatedRoles[selectedRole].members[editingMemberId] = { ...newMember };\n    setRoles(updatedRoles);\n    setEditingMemberId(null); // Stop editing\n    setNewMember({ username: \"\", password: \"\" }); // Clear inputs\n  };\n\n  // Function to handle deleting a member\n  const deleteMember = (memberIndex) => {\n    const updatedRoles = [...roles];\n    updatedRoles[selectedRole].members.splice(memberIndex, 1);\n    setRoles(updatedRoles);\n  };\n\n  return (\n    <div className=\"role-management\">\n      <h2>Role Management</h2>\n\n      {/* Add Member Section */}\n      <div className=\"add-member-section\">\n        <select\n          onChange={(e) => setSelectedRole(e.target.value)}\n          value={selectedRole || \"\"}\n        >\n          <option value=\"\" disabled>\n            Select a Role\n          </option>\n          {roles.map((role, index) => (\n            <option key={index} value={index}>\n              {role.role}\n            </option>\n          ))}\n        </select>\n\n        {selectedRole !== null && (\n          <>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={newMember.username}\n              onChange={handleMemberInputChange}\n              placeholder=\"Enter username\"\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={newMember.password}\n              onChange={handleMemberInputChange}\n              placeholder=\"Enter password\"\n            />\n            {editingMemberId !== null ? (\n              <button onClick={saveEditMember}>Save Changes</button>\n            ) : (\n              <button onClick={addMember}>+ Add Member</button>\n            )}\n          </>\n        )}\n      </div>\n\n      {/* Roles and Members Table */}\n      {roles.map((role, roleIndex) => (\n        <div key={roleIndex} className=\"role-section\">\n          <h3>{role.role}</h3>\n          <p>{role.description}</p>\n          <p>Members: {role.members.length}</p>\n          <button\n            onClick={() =>\n              setViewMembers(viewMembers === roleIndex ? null : roleIndex)\n            }\n          >\n            {viewMembers === roleIndex ? \"Hide Members\" : \"View Members\"}\n          </button>\n\n          {viewMembers === roleIndex && (\n            <table>\n              <thead>\n                <tr>\n                  <th>Username</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {role.members.map((member, memberIndex) => (\n                  <tr key={memberIndex}>\n                    <td>{member.username}</td>\n                    <td>\n                      <button\n                        onClick={() => {\n                          setSelectedRole(roleIndex);\n                          setEditingMemberId(memberIndex);\n                          setNewMember(member);\n                        }}\n                      >\n                        Edit\n                      </button>\n                      <button onClick={() => deleteMember(memberIndex)}>\n                        Delete\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default RoleManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}